Hello karel

KW_FUNC         |function
ID              |tointeger
LBR             |
ID              |f
DOUBLEDOT       |
KW_NUM          |number
RBR             |
DOUBLEDOT       |
KW_INT          |integer
KW_LOCAL        |local
DOUBLEDOT       |
KW_NUM          |number
KW_LOCAL        |local
ID              |ret
DOUBLEDOT       |
KW_INT          |integer
KW_IF           |if
ID              |type
LBR             |
ID              |f
RBR             |
EQUAL           |
STREND          |"number"
ID              |or
ID              |type
LBR             |
ID              |f
RBR             |
EQUAL           |
STREND          |"integer"
KW_THEN         |then
ID              |ret
COMMA           |
ASSIGN          |
ID              |math
DOT             |
ID              |modf
LBR             |
ID              |f
RBR             |
KW_END          |end
KW_RETURN       |return
ID              |ret
KW_END          |end
KW_FUNC         |function
ID              |readi
LBR             |
RBR             |
DOUBLEDOT       |
KW_INT          |integer
KW_LOCAL        |local
ID              |ret
DOUBLEDOT       |
KW_STR          |string
KW_LOCAL        |local
DOUBLEDOT       |
KW_STR          |string
KW_LOCAL        |local
ID              |rest
DOUBLEDOT       |
KW_STR          |string
ID              |ret
COMMA           |
ASSIGN          |
ID              |io
DOT             |
ID              |read
LBR             |
STREND          |"*n"
RBR             |
ID              |rest
COMMA           |
ASSIGN          |
ID              |io
DOT             |
ID              |read
LBR             |
STREND          |"*l"
RBR             |
KW_IF           |if
KW_STR          |string
DOT             |
ID              |match
LBR             |
ID              |rest
COMMA           |
STREND          |"%g"
RBR             |
NEQUAL          |
KW_NIL          |nil
KW_THEN         |then
KW_RETURN       |return
KW_NIL          |nil
KW_END          |end
KW_RETURN       |return
ID              |math
DOT             |
ID              |tointeger
LBR             |
ID              |ret
RBR             |
KW_END          |end
KW_FUNC         |function
ID              |readn
LBR             |
RBR             |
DOUBLEDOT       |
KW_NUM          |number
KW_LOCAL        |local
ID              |ret
DOUBLEDOT       |
KW_STR          |string
KW_LOCAL        |local
DOUBLEDOT       |
KW_STR          |string
KW_LOCAL        |local
ID              |rest
DOUBLEDOT       |
KW_STR          |string
ID              |ret
COMMA           |
ASSIGN          |
ID              |io
DOT             |
ID              |read
LBR             |
STREND          |"*n"
RBR             |
ID              |rest
COMMA           |
ASSIGN          |
ID              |io
DOT             |
ID              |read
LBR             |
STREND          |"*l"
RBR             |
KW_IF           |if
KW_STR          |string
DOT             |
ID              |match
LBR             |
ID              |rest
COMMA           |
STREND          |"%g"
RBR             |
NEQUAL          |
KW_NIL          |nil
KW_THEN         |then
KW_RETURN       |return
KW_NIL          |nil
KW_END          |end
KW_RETURN       |return
ID              |tonumber
LBR             |
ID              |ret
RBR             |
KW_END          |end
KW_FUNC         |function
ID              |reads
LBR             |
RBR             |
DOUBLEDOT       |
KW_STR          |string
KW_LOCAL        |local
ID              |ret
DOUBLEDOT       |
KW_STR          |string
KW_LOCAL        |local
DOUBLEDOT       |
KW_STR          |string
ID              |ret
COMMA           |
ASSIGN          |
ID              |io
DOT             |
ID              |read
LBR             |
STREND          |"*l"
RBR             |
KW_RETURN       |return
ID              |tostring
LBR             |
ID              |ret
RBR             |
KW_END          |end
KW_FUNC         |function
ID              |write
LBR             |
CONCAT          |
DOT             |
DOUBLEDOT       |
KW_STR          |string
KW_INT          |integer
KW_NUM          |number
ID              |boolean
RBR             |
KW_LOCAL        |local
ID              |va
ASSIGN          |
LCBR            |
ID              |n
ASSIGN          |
ID              |select
LBR             |
STREND          |"#"
COMMA           |
CONCAT          |
DOT             |
RBR             |
COMMA           |
CONCAT          |
DOT             |
RCBR            |
ID              |for
ID              |i
ASSIGN          |
INT             |1
COMMA           |
ID              |va
DOT             |
ID              |n
KW_DO           |do
KW_LOCAL        |local
ID              |x
ASSIGN          |
ID              |va
LSBR            |
ID              |i
RSBR            |
KW_IF           |if
ID              |type
LBR             |
ID              |x
RBR             |
EQUAL           |
STREND          |"number"
KW_THEN         |then
KW_IF           |if
LBR             |
ID              |pcall
LBR             |
KW_FUNC         |function
LBR             |
RBR             |
KW_STR          |string
DOT             |
ID              |format
LBR             |
STREND          |"%i"
COMMA           |
ID              |x
RBR             |
KW_END          |end
RBR             |
RBR             |
KW_THEN         |then
KW_IF           |if
KW_STR          |string
DOT             |
ID              |find
LBR             |
ID              |tostring
LBR             |
ID              |x
RBR             |
COMMA           |
STREND          |"."
COMMA           |
INT             |1
COMMA           |
ID              |true
RBR             |
EQUAL           |
KW_NIL          |nil
KW_THEN         |then
ID              |io
DOT             |
ID              |write
LBR             |
KW_STR          |string
DOT             |
ID              |format
LBR             |
STREND          |"%i"
COMMA           |
ID              |x
RBR             |
RBR             |
KW_ELSE         |else
ID              |io
DOT             |
ID              |write
LBR             |
KW_STR          |string
DOT             |
ID              |format
LBR             |
STREND          |"%a"
COMMA           |
ID              |x
RBR             |
RBR             |
KW_END          |end
KW_ELSE         |else
ID              |io
DOT             |
ID              |write
LBR             |
KW_STR          |string
DOT             |
ID              |format
LBR             |
STREND          |"%a"
COMMA           |
ID              |x
RBR             |
RBR             |
KW_END          |end
ID              |elseif
ID              |type
LBR             |
ID              |x
RBR             |
EQUAL           |
STREND          |"integer"
KW_THEN         |then
ID              |io
DOT             |
ID              |write
LBR             |
KW_STR          |string
DOT             |
ID              |format
LBR             |
STREND          |"%i"
COMMA           |
ID              |x
RBR             |
RBR             |
KW_ELSE         |else
ID              |io
DOT             |
ID              |write
LBR             |
ID              |tostring
LBR             |
ID              |x
RBR             |
RBR             |
KW_END          |end
KW_END          |end
KW_END          |end
KW_FUNC         |function
ID              |substr
LBR             |
ID              |str
DOUBLEDOT       |
KW_STR          |string
COMMA           |
ID              |i
DOUBLEDOT       |
KW_INT          |integer
COMMA           |
ID              |j
DOUBLEDOT       |
KW_INT          |integer
RBR             |
DOUBLEDOT       |
KW_STR          |string
KW_IF           |if
ID              |str
EQUAL           |
KW_NIL          |nil
ID              |or
ID              |i
EQUAL           |
KW_NIL          |nil
ID              |or
ID              |j
EQUAL           |
KW_NIL          |nil
KW_THEN         |then
ID              |error
LBR             |
STREND          |"ERROR 8: Unexpected nil value in the parameters."
RBR             |
KW_END          |end
KW_IF           |if
ID              |i
LTE             |
BLOCK_END       |0
ID              |or
ID              |i
GT              |
LEN             |
ID              |str
ID              |and
ID              |j
LTE             |
BLOCK_END       |0
ID              |or
ID              |j
GT              |
LEN             |
ID              |str
KW_THEN         |then
KW_RETURN       |return
STREND          |""
KW_END          |end
KW_RETURN       |return
KW_STR          |string
DOT             |
ID              |sub
LBR             |
ID              |str
COMMA           |
ID              |i
COMMA           |
ID              |j
RBR             |
KW_END          |end
KW_FUNC         |function
ID              |ord
LBR             |
ID              |s
DOUBLEDOT       |
KW_STR          |string
COMMA           |
ID              |i
DOUBLEDOT       |
KW_INT          |integer
RBR             |
DOUBLEDOT       |
KW_INT          |integer
KW_IF           |if
ID              |s
EQUAL           |
KW_NIL          |nil
ID              |or
ID              |i
EQUAL           |
KW_NIL          |nil
KW_THEN         |then
ID              |error
LBR             |
STREND          |"ERROR 8: Unexpected nil value in the parameters."
RBR             |
KW_END          |end
KW_IF           |if
ID              |i
LTE             |
BLOCK_END       |0
ID              |or
ID              |i
GT              |
LEN             |
ID              |s
KW_THEN         |then
KW_RETURN       |return
KW_NIL          |nil
KW_END          |end
KW_RETURN       |return
KW_STR          |string
DOT             |
ID              |byte
LBR             |
ID              |s
COMMA           |
ID              |i
RBR             |
KW_END          |end
KW_FUNC         |function
ID              |chr
LBR             |
ID              |i
DOUBLEDOT       |
KW_INT          |integer
RBR             |
DOUBLEDOT       |
KW_STR          |string
KW_IF           |if
ID              |i
EQUAL           |
KW_NIL          |nil
KW_THEN         |then
ID              |error
LBR             |
STREND          |"ERROR 8: Unexpected nil value in the parameter."
RBR             |
KW_END          |end
KW_IF           |if
ID              |i
LT              |
BLOCK_END       |0
ID              |or
ID              |i
GT              |
INT             |255
KW_THEN         |then
KW_RETURN       |return
KW_NIL          |nil
KW_END          |end
KW_RETURN       |return
KW_STR          |string
DOT             |
ID              |char
LBR             |
ID              |i
RBR             |
KW_END          |end
